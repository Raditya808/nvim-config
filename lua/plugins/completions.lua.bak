return {
	-- add blink.compat
	{
		"saghen/blink.compat",
		-- use the latest release, via version = '*', if you also use the latest release for blink.cmp
		version = "*",
		-- lazy.nvim will automatically load the plugin when it's required by blink.cmp
		lazy = true,
		-- make sure to set opts so that lazy.nvim calls blink.compat's setup
		opts = {},
	},
	-- Blink cmp
	{
		"Saghen/blink.cmp",
		dependencies = {
			"rafamadriz/friendly-snippets",
			"onsails/lspkind.nvim",
			"nvim-tree/nvim-web-devicons",
			{ "L3MON4D3/LuaSnip", version = "v2.*" },
		},
		Event = "InsertEnter",
		version = "1.*",

		---@module 'blink.cmp'
		---@type blink.cmp.Config
		opts = {
			snippets = { preset = "luasnip" },
			keymap = {
				preset = "none",
				["<Tab>"] = {
					function(cmp)
						cmp.select_next({ auto_insert = false, on_ghost_text = true })
					end,
				},
				["<S-Tab>"] = {
					function(cmp)
						cmp.select_prev({ auto_insert = false, on_ghost_text = true })
					end,
				}, -- show with a list of providers
				["<C-l>"] = {
					function(cmp)
						cmp.show({ providers = { "lsp", "path", "snippets", "buffer", "codeium" } })
					end,
				},
				["<CR>"] = { "accept", "fallback" },
			},

			appearance = {
				nerd_font_variant = "mono",
			},

			completion = {
				documentation = { auto_show = true },
				menu = {
					draw = {
						components = {
							kind_icon = {
								text = function(ctx)
									local icon = ctx.kind_icon
									if vim.tbl_contains({ "Path" }, ctx.source_name) then
										local dev_icon, _ = require("nvim-web-devicons").get_icon(ctx.label)
										if dev_icon then
											icon = dev_icon
										end
									else
										icon = require("lspkind").symbolic(ctx.kind, {
											mode = "symbol_text",
										})
									end

									return icon .. ctx.icon_gap
								end,

								-- Optionally, use the highlight groups from nvim-web-devicons
								-- You can also add the same function for `kind.highlight` if you want to
								-- keep the highlight groups in sync with the icons.
								highlight = function(ctx)
									local hl = ctx.kind_hl
									if vim.tbl_contains({ "Path" }, ctx.source_name) then
										local dev_icon, dev_hl = require("nvim-web-devicons").get_icon(ctx.label)
										if dev_icon then
											hl = dev_hl
										end
									end
									return hl
								end,
							},
						},
					},
				},
			},

			sources = {
				default = { "lsp", "path", "snippets", "buffer", "codeium" },
				providers = {
					codeium = { name = "Codeium", module = "codeium.blink", async = true },
				},
			},
			fuzzy = { implementation = "prefer_rust_with_warning" },
		},

		cmdline = {
			keymap = {
				["<Tab>"] = { "show_and_insert", "select_next" },
				["<S-Tab>"] = { "show_and_insert", "select_prev" },
				["<CR>"] = { "select_and_accept", "fallback" },
				["<C-l>"] = { "show" },
			},
			completion = { menu = { auto_show = true }, ghost_text = { enabled = true } },
		},

		opts_extend = { "sources.default" },
	},
}
